---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../../generate_random_string.yml

- name: Set dynamic name values with random string
  ansible.builtin.set_fact:
    vpn_comments: "{{ vpn_comments }}"
    vpn_fqdn: "{{ vpn_fqdn }}"

- name: Set dynamic pre_shared_key values with random password
  ansible.builtin.set_fact:
    pre_shared_key: "{{ random_password }}"
  no_log: true

- name: Create Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/create_traffic_forwarding_static_ip.yml

- name: Verify Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/verify_traffic_forwarding_static_ip.yml

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test VPN Credential Configuration
  block:
    ################################ Test Type "UFQDN" VPN Credentials ################################
    - name: Ensure Type "UFQDN" VPN Credentials (leftover)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Ensure Type "UFQDN" VPN Credentials is absent
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify Type "UFQDN" VPN Credentials is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Ensure Type "UFQDN" VPN Credentials is (Present)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify Type "UFQDN" VPN Credentials is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.type is defined

    - name: Ensure Type "UFQDN" VPN Credentials (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Ensure Type "UFQDN" VPN Credentials is present (idempotency check)
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Update Type "UFQDN" VPN Credentials (Present)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        update_psk: "{{ update_psk }}"
        pre_shared_key: "{{ update_psk }}"
      register: result

    - name: Verify Type "UFQDN" VPN Credentials is Updated
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.fqdn == vpn_fqdn

    - name: Update Type "UFQDN" VPN Credentials (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ update_psk }}"
      register: result

    - name: Ensure Type "UFQDN" VPN Credentials update is idempotent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all Type "UFQDN" VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_info:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all Type "UFQDN" VPN Credentials found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.credentials[0] is defined

    - name: Fetch this Type "UFQDN" VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_info:
        provider: "{{ zia_cloud }}"
        fqdn: "{{ vpn_fqdn }}"
      register: result

    - name: Ensure this Type "UFQDN" VPN Credentials is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.credentials is defined
          - result.credentials[0].fqdn is defined
          - result.credentials[0].fqdn == vpn_fqdn

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete Type "UFQDN" VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ update_psk }}"
      register: result

    - name: Verify Type "UFQDN" VPN Credential is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Type "UFQDN" VPN Credentials (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ vpn_type }}"
        fqdn: "{{ vpn_fqdn }}"
        comments: "{{ vpn_comments }}"
        pre_shared_key: "{{ update_psk }}"
      register: result

    - name: Verify Type "UFQDN" VPN Credentials is absent
      ansible.builtin.assert:
        that:
          - not result.changed

################################ Test Type "IP" VPN Credentials ################################
- name: Ensure Type "IP" VPN Credentials (leftover)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: absent
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ pre_shared_key }}"
  register: result

- name: Ensure Type "IP" VPN Credentials is absent
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: absent
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ pre_shared_key }}"
  register: result

- name: Verify Type "IP" VPN Credentials is absent
  ansible.builtin.assert:
    that:
      - not result.changed

- name: Ensure Type "IP" VPN Credentials is (Present)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: present
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ pre_shared_key }}"
  register: result

- name: Verify Type "IP" VPN Credentials is present
  ansible.builtin.assert:
    that:
      - result.changed
      - result.data is defined
      - result.data.type is defined

- name: Ensure Type "IP" VPN Credentials (again; idempotency check)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: present
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ pre_shared_key }}"
  register: result

- name: Ensure Type "IP" VPN Credentials is present (idempotency check)
  ansible.builtin.assert:
    that:
      - not result.changed

- name: Update Type "IP" VPN Credentials (Present)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: present
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    update_psk: "{{ update_psk }}"
    pre_shared_key: "{{ update_psk }}"
  register: result

- name: Verify Type "IP"  VPN Credentials is Updated
  ansible.builtin.assert:
    that:
      - result.changed
      - result.data is defined
      - result.data.ip_address == ip_address

- name: Update Type "IP" VPN Credentials (again; idempotency check)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: present
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    update_psk: false
    pre_shared_key: "{{ update_psk }}"
  register: result

- name: Ensure Type "IP" VPN Credentials update is idempotent
  ansible.builtin.assert:
    that:
      - not result.changed

- name: Fetch all Type "IP" VPN Credentials
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_info:
    provider: "{{ zia_cloud }}"
  register: result

- name: Ensure all VPN Credentials found
  ansible.builtin.assert:
    that:
      - not result.changed
      - result.credentials[0] is defined

- name: Fetch this Type "IP" VPN Credential
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_info:
    provider: "{{ zia_cloud }}"
    ip_address: "{{ static_ip_address }}"
  register: result

- name: Ensure this Type "IP" VPN Credentials is found
  ansible.builtin.assert:
    that:
      - not result.changed
      - result.credentials is defined
      - result.credentials[0].ip_address is defined
      - result.credentials[0].ip_address == ip_address

- name: Give the ZIA Cloud a 5 seconds to settle
  ansible.builtin.pause:
    seconds: 5

- name: Delete VPN Credentials
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: absent
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ update_psk }}"
  register: result

- name: Verify Type "IP" VPN Credential is Deleted
  ansible.builtin.assert:
    that:
      - result.changed

- name: Delete Type "IP" VPN Credentials (again; idempotency check)
  zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
    provider: "{{ zia_cloud }}"
    state: absent
    type: "{{ new_type }}"
    ip_address: "{{ static_ip_address }}"
    comments: "{{ vpn_comments }}"
    pre_shared_key: "{{ update_psk }}"
  register: result

- name: Verify Type "IP" VPN Credentials is absent
  ansible.builtin.assert:
    that:
      - not result.changed

- name: Clean up Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/delete_traffic_forwarding_static_ip.yml
