---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../../generate_random_string.yml

- name: Create Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/create_traffic_forwarding_static_ip.yml

- name: Verify Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/verify_traffic_forwarding_static_ip.yml

- name: Set dynamic comment values with random string
  ansible.builtin.set_fact:
    comment: "{{ comment }}_{{ random_string }}"

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block for GRE Tunnel Configuration
  block:
    # GRE Tunnel
    - name: Ensure GRE Tunnel (leftover)
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: absent
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

  rescue:
    - name: Handle errors
      ansible.builtin.debug:
        msg: An error occurred.

  always:
    - name: Cleanup operations
      ansible.builtin.debug:
        msg: Cleanup complete.

    - name: Ensure GRE Tunnel is absent
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: absent
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

    - name: Verify GRE Tunnel is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Ensure GRE Tunnel is (Present)
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: present
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

    - name: Verify GRE Tunnel is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data.source_ip is defined

    - name: Ensure GRE Tunnel (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: present
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

    - name: Ensure GRE Tunnel is absent (idempotency check)
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all GRE Tunnel
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnel_info:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all GRE Tunnel found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.gre_tunnels[0] is defined

    - name: Fetch this GRE Tunnel
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnel_info:
        provider: "{{ zia_cloud }}"
        source_ip: "{{ static_ip_address }}"
      register: result

    - name: Ensure this GRE Tunnel is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.gre_tunnels is defined
          - result.gre_tunnels[0].source_ip is defined
          - result.gre_tunnels[0].source_ip == source_ip

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete GRE Tunnel
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: absent
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

    - name: Verify GRE Tunnel is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete GRE Tunnel (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_gre_tunnels:
        provider: "{{ zia_cloud }}"
        state: absent
        comment: "{{ comment }}"
        source_ip: "{{ static_ip_address }}"
        ip_unnumbered: "{{ ip_unnumbered }}"
        within_country: "{{ within_country }}"
      register: result

    - name: Verify GRE Tunnel is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

- name: Clean up Static IP Address
  ansible.builtin.include_tasks: ../../../helper_tasks/zia_traffic_forwarding_static_ip/delete_traffic_forwarding_static_ip.yml
