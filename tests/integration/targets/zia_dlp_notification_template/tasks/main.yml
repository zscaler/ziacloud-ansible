---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../../generate_random_string.yml

- name: Set dynamic name values with random string
  ansible.builtin.set_fact:
    template_name: "{{ template_name }}_{{ random_string }}"

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test DLP Notification Template Configuration
  block:
    - name: Ensure DLP Notification Template (leftover)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ template_name }}"
      register: result_cleanup

    - name: Debug result of cleanup
      ansible.builtin.debug:
        var: result_cleanup

    - name: Ensure DLP Notification Template is absent
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ template_name }}"
      register: result_absent

    - name: Debug result of ensure absent
      ansible.builtin.debug:
        var: result_absent

    - name: Verify DLP Notification Template is absent
      ansible.builtin.assert:
        that:
          - not result_absent.changed
          - result_absent.data is defined

    - name: Ensure DLP Notification Template is present
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ template_name }}"
        attach_content: "{{ attach_content }}"
        tls_enabled: "{{ tls_enabled }}"
        subject: "{{ subject }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result_present

    # - name: Debug result of ensure present
    #   ansible.builtin.debug:
    #     var: result_present

    - name: Verify DLP Notification Template is present
      ansible.builtin.assert:
        that:
          - result_present.changed
          - result_present.data is defined
          - result_present.data.name is defined

    - name: Ensure DLP Notification Template is present (idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ template_name }}"
        attach_content: "{{ attach_content }}"
        tls_enabled: "{{ tls_enabled }}"
        subject: "{{ subject }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result_idempotent

    # - name: Debug result of idempotency check
    #   ansible.builtin.debug:
    #     var: result_idempotent

    - name: Ensure DLP Notification Template is present (idempotency check)
      ansible.builtin.assert:
        that:
          - not result_idempotent.changed

    - name: Update DLP Notification Template (Present)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ template_name }}"
        subject: "{{ subject }}"
        attach_content: "{{ attach_content_update }}"
        tls_enabled: "{{ tls_enabled_update }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Verify DLP Notification Template is Updated
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name == template_name
          - result.data.attach_content == attach_content_update
          - result.data.tls_enabled == tls_enabled_update

    - name: Ensure DLP Notification Template is Updated (again; idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ template_name }}"
        subject: "{{ subject }}"
        attach_content: "{{ attach_content_update }}"
        tls_enabled: "{{ tls_enabled_update }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Ensure DLP Notification Template update is idempotent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template_info:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all DLP Notification Template found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.templates is defined

    - name: Fetch this DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template_info:
        provider: "{{ zia_cloud }}"
        name: "{{ template_name }}"
      register: result

    - name: Ensure this DLP Notification Template is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.templates is defined
          - result.templates[0].name is defined
          - result.templates[0].name == template_name

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ template_name }}"
      register: result

    - name: Verify DLP Notification Template is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete DLP Notification Template (again; idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ template_name }}"
      register: result

    - name: Verify DLP Notification Template is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
