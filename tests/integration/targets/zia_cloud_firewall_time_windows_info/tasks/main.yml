---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test Cloud Firewall Time Windows Configuration
  block:
    - name: Fetch All Time Intervals
      zscaler.ziacloud.zia_cloud_firewall_time_windows_info:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure All Time Intervals found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.time_windows is defined

    - name: Fetch time01 Time Interval
      zscaler.ziacloud.zia_cloud_firewall_time_windows_info:
        provider: "{{ zia_cloud }}"
        name: "{{ time01 }}"
      register: result

    - name: Ensure time01 Time Interval found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.time_windows is defined

    - name: Fetch time02 Time Interval
      zscaler.ziacloud.zia_cloud_firewall_time_windows_info:
        provider: "{{ zia_cloud }}"
        name: "{{ time02 }}"
      register: result

    - name: Ensure time02 Time Interval found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.time_windows is defined

    - name: Fetch time03 Time Interval
      zscaler.ziacloud.zia_cloud_firewall_time_windows_info:
        provider: "{{ zia_cloud }}"
        name: "{{ time03 }}"
      register: result

    - name: Ensure time03 Time Interval found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.time_windows is defined
