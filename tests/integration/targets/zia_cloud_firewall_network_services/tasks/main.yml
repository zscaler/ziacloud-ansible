---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../../generate_random_string.yml

- name: Set dynamic name values with random string
  ansible.builtin.set_fact:
    service_name: "{{ service_name }}_{{ random_string }}"
    description: "{{ description }}_{{ random_string }}"

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test Cloud Firewall Network Services Configuration
  block:
    - name: Ensure Network Services is absent (leftover)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ service_name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

  rescue:
    - name: Handle errors
      ansible.builtin.debug:
        msg: An error occurred.

  always:
    - name: Cleanup operations
      ansible.builtin.debug:
        msg: Cleanup complete.

    - name: Ensure Network Services is absent
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ service_name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Ensure Network Services is (Present)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ service_name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is Present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name is defined
          - result.data.name == service_name
          - result.data.description is defined
          - result.data.description == description

    - name: Ensure Network Services is (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ service_name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch All Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_info:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all Network Services found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.services is defined

    - name: Fetch this Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_info:
        provider: "{{ zia_cloud }}"
        name: "{{ service_name }}"
      register: result

    - name: Ensure this Network Services is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.services is defined
          - result.services[0].name is defined
          - result.services[0].name == service_name
          - result.services[0].description is defined
          - result.services[0].description == description

    - name: Delete Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        provider: "{{ zia_cloud }}"
        name: "{{ service_name }}"
      register: result

    - name: Verify Network Services is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Network Services (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        provider: "{{ zia_cloud }}"
        name: "{{ service_name }}"
      register: result

    - name: Verify the Network Services is deleted
      ansible.builtin.assert:
        that:
          - not result.changed
