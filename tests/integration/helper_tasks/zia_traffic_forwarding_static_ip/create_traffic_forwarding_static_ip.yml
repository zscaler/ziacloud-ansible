---
- name: Set initial variables
  ansible.builtin.set_fact:
    ip_address: "121.234.54.72"
    routable_ip: true
    comment: test_zia_ansible
    geo_override: true
    latitude: 22.5559
    longitude: 114.0577

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../generate_random_string.yml

- name: Set dynamic name values with random string
  ansible.builtin.set_fact:
    comment: "{{ comment }}_{{ random_string }}"

- name: Main block to Test Static IP Address Configuration
  block:
    - name: Create Helper Static IP Address
      zscaler.ziacloud.zia_traffic_forwarding_static_ip:
        provider: "{{ zia_cloud }}"
        state: present
        ip_address: "{{ ip_address }}"
        routable_ip: "{{ routable_ip }}"
        comment: "{{ comment }}"
        geo_override: "{{ geo_override }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
      register: static_ip

    - name: Set Static IP ID as fact
      ansible.builtin.set_fact:
        static_ip_id: "{{ static_ip.data.id }}"
        static_ip_address: "{{ static_ip.data.ip_address }}"
