---
- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../generate_random_string.yml

- name: Set dynamic pre_shared_key values with random password
  ansible.builtin.set_fact:
    pre_shared_key: "{{ random_password }}"
  no_log: true

- name: Set initial variables
  ansible.builtin.set_fact:
    help_type: UFQDN
    help_fqdn: usa_sjc37_{{ random_string }}@securitygeek.io
    help_comments: USA - San Jose IPSec Tunnel
    pre_shared_key: "{{ pre_shared_key }}"

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZSCALER_CLIENT_ID
    - ZSCALER_CLIENT_SECRET
    - ZSCALER_VANITY_DOMAIN
    - ZSCALER_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      client_id: "{{ lookup('env', 'ZSCALER_CLIENT_ID') }}"
      client_secret: "{{ lookup('env', 'ZSCALER_CLIENT_SECRET') }}"
      vanity_domain: "{{ lookup('env', 'ZSCALER_VANITY_DOMAIN') }}"
      cloud: "{{ lookup('env', 'ZSCALER_CLOUD') | default(omit) }}"
  no_log: true

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../generate_random_string.yml

- name: Set dynamic name values with random string
  ansible.builtin.set_fact:
    help_comments: "{{ help_comments }}_{{ random_string }}"

- name: Main block to Test VPN Credential Configuration
  block:
    - name: Create Helper UFQDN VPN Credential
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ help_type }}"
        fqdn: "{{ help_fqdn }}"
        comments: "{{ help_comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: vpn_cred

    - name: Set VPN Credential ID and Type as fact
      ansible.builtin.set_fact:
        vpn_id: "{{ vpn_cred.data.id }}"
        help_type: "{{ vpn_cred.data.type }}"
        help_fqdn: "{{ vpn_cred.data.fqdn }}"
